networks:
  playlist:
    driver: bridge

services:
  backend:
    build: ./backend
    volumes:
      - ${MUSIC_PATH}:/music:ro
      - ./data:/data:rw
      - ${PLEX_M3U_DROP_SOURCE}:/playlist:rw
    restart: unless-stopped
    networks:
      - playlist
    expose:
      - 3000
    environment:
      - LASTFM_API_KEY=${LASTFM_API_KEY}
      - LASTFM_SHARED_SECRET=${LASTFM_SHARED_SECRET}
      - MUSIC_PATH=/music

      - PLEX_ENDPOINT=${PLEX_ENDPOINT}
      - PLEX_TOKEN=${PLEX_TOKEN}
      - PLEX_LIBRARY=${PLEX_LIBRARY}

      - PLEX_MAP_SOURCE=${PLEX_MAP_SOURCE}
      - PLEX_MAP_TARGET=${PLEX_MAP_TARGET}

      - PLEX_M3U_DROP_SOURCE=${PLEX_M3U_DROP_SOURCE}
      - PLEX_M3U_DROP_TARGET=${PLEX_M3U_DROP_TARGET}
    
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://0.0.0.0:3000/api/health')"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    ports:
      - "5173:8080"
    volumes:
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://backend:3000
      - VITE_ALLOWED_HOSTNAME=${VITE_ALLOWED_HOSTNAME}
      - VITE_HOST=0.0.0.0
      - VITE_PORT=8080
    restart: unless-stopped
    networks:
      - playlist
